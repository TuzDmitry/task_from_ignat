{"version":3,"sources":["Tuesday/TodoList/todoComponents/TodoListTask.module.css","Monday/MyComponent/MyComponent.module.css","Monday/Qualities/Quality/Quality.module.css","Loading/Loading.module.css","Wednesday/Wednesday.module.css","Monday/Qualities/Qualities.module.css","Wednesday/ThemeSelector/InputRadio/InputRadio.module.css","Wednesday/ThemeSelector/ThemeSelector.module.css","assets/images/preloader.gif","NavBar/NavBar.module.css","Monday/ComponentSpINBut/Component3.module.css","serviceWorker.js","redux/loadingReducer.js","redux/SettingsReducer.js","dal/api.js","redux/wednesdayReducer.js","redux/reduxStore.js","NavBar/NavBar.jsx","Monday/MyComponent/MyComponent.jsx","Monday/Qualities/Quality/Quality.jsx","Monday/Qualities/Qualities.jsx","Monday/ComponentSpINBut/Components3Parts/InnerSpan.jsx","Monday/ComponentSpINBut/Components3Parts/InnerButton.jsx","Monday/ComponentSpINBut/Components3Parts/InnerInput.jsx","Monday/ComponentSpINBut/Components3Parts/NameItem/NameItem.jsx","Monday/ComponentSpINBut/Components3Parts/InnerListOfNames.jsx","Monday/ComponentSpINBut/Component3.jsx","Monday/Monday.jsx","Tuesday/TodoList/functions.jsx","Tuesday/TodoList/todoComponents/TodoListHeader.jsx","Tuesday/TodoList/todoComponents/TodoListTask.jsx","Tuesday/TodoList/todoComponents/TodoListTasks.jsx","Tuesday/TodoList/todoComponents/TodoListFooter.jsx","Tuesday/TodoList/TodoList.jsx","Tuesday/Tuesday.jsx","Loading/Loading.jsx","Wednesday/ThemeSelector/InputRadio/InputRadio.js","Wednesday/ThemeSelector/ThemeSelector.js","Progress/Progress.js","Wednesday/QuerySendComponent/QuerySender.jsx","Wednesday/QuerySendComponent/QuerySenderContainer.js","Wednesday/Wednesday.jsx","App.jsx","index.jsx"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","loading","loadingReducer","state","action","type","SET_STYLE_THEME","theme_style","themes","id","title","color","choisedTheme","selectedStyle","style1","SettingsReducer","tryCatch","f","a","response","console","log","data","yourBody","success","instance","axios","baseURL","API","post","CHANGE_SUCCESS","IN_PROGRESS","CHANGE_NOTIFICATION","inProgress","notification","wednesdayReducer","newText","changeNotification","changeInProgress","reducers","combineReducers","loadingPage","settings","wednesdayPage","store","createStore","applyMiddleware","thunkMiddleware","NavBar","isHiddenPanel","ShowHidePanel","setState","render","classForHidePanel","style","barPanel","hide","classForButton","barButton","barButtonShow","barButtonHide","className","bar","onClick","barItem","activeClassName","activeLink","to","React","Component","MyComponent","my","block","lastName","time","value","readOnly","Quality","props","activeSkill","skill","Qualities","builder","arraySkills","map","el","i","numberSkill","key","qua","active_block","quaS","InnerSpan","sp","nameCounter","InnerButton","but","getName","InnerInput","onEnterPress","e","classNameInput","error","inp","onChange","onChangeInput","onKeyPress","NameItem","name","InnerListOfNames","nameElements","listOfNames","listNames","Component3","n","currentTarget","currentName","getNameForAlert","componet3","length","Monday","saveState","localStorage","setItem","JSON","stringify","getOurTime","Date","toDateString","toTimeString","replace","TodoListHeader","onAddTaskClick","addTask","onTitleChanged","placeholder","TodoListTask","onIsDoneChanged","currIsDone","checked","task","changeStatusIsDoneActionCreator","pseudoDispatch","text","upDateTitleActionCreator","onPriorityChanged","upDatePriorityActionCreator","onCloseClick","deleteTask","editContentMode","editPriorityMode","displayCloudInfo","activateEditMode","deActivateEditMode","classForIsDone","isDone","done","todoListTask","classForCloud","showCloudInfo","onMouseOut","onMouseOver","created","updated","finished","onBlur","autoFocus","size","priority","TodoListTasks","taskElements","tasks","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","onHideFiltersClick","classForAll","filterValue","classForCompleted","classForActive","TodoList","nextTaskId","newTask","newTasks","taskId","filter","t","index","newfilterValue","changeTask","newPropsObj","newValue","x","stateAsString","getItem","parse","restoreState","this","Tuesday","Loading","loadingContainer","loadingBlock","InputRadio","divsStyle","textLabel","setTheme","ThemeSelector","ourThemes","theme","container","Progress","src","preloader","alt","QuerySender","backgroundColor","borderRadius","border","height","changeSuccess","disabled","queryFrom11Less","fontWeight","QuerySenderAPI","connect","dispatch","isSuccess","thunk","getState","then","result","setTimeout","Wednesday","divStyle","themeStyle","backColor","QuerySenderContainer","WednesdayContainer","setStyleTheme","App","ChooseActiveSkill","newName","newNames","path","setLoadingFalse","AppContainer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.96601634.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListTask\":\"TodoListTask_todoListTask__2zcrA\",\"done\":\"TodoListTask_done__1elsA\",\"showCloudInfo\":\"TodoListTask_showCloudInfo__3UyCr\",\"hide\":\"TodoListTask_hide__2kqrk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"MyComponent_block__r8ykL\",\"time\":\"MyComponent_time__1jBvR\",\"lastName\":\"MyComponent_lastName__2fI4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Quality_block__1_Dpe\",\"active_block\":\"Quality_active_block__v35qW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingContainer\":\"Loading_loadingContainer__1GxDk\",\"loadingBlock\":\"Loading_loadingBlock__3R-Op\",\"transforming\":\"Loading_transforming__3OZIj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backColor\":\"Wednesday_backColor__1qb7o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Qualities_block__1tadQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textLabel\":\"InputRadio_textLabel__3U_2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ThemeSelector_container__2xFCT\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.ee01809c.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"NavBar_bar__32D5t\",\"barButton\":\"NavBar_barButton__1Jo72\",\"barButtonShow\":\"NavBar_barButtonShow__3EjPc\",\"barButtonHide\":\"NavBar_barButtonHide__1vTwC\",\"barPanel\":\"NavBar_barPanel__2hS1A\",\"hide\":\"NavBar_hide__cqKio\",\"activeLink\":\"NavBar_activeLink__3W2Gv\",\"barItem\":\"NavBar_barItem__3DM-B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"componet3\":\"Component3_componet3__1AHWo\",\"sp\":\"Component3_sp__2rkOt\",\"inp\":\"Component3_inp__2Og7a\",\"but\":\"Component3_but__3N8tP\",\"listNames\":\"Component3_listNames__3lTg0\",\"NameItem\":\"Component3_NameItem__MBIBw\",\"error\":\"Component3_error__3skDU\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const SET_LOADING = 'SET_LOADING';\r\n\r\nlet initialState = {\r\n    loading: true\r\n}\r\n\r\nlet loadingReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LOADING:\r\n            return {...state, loading: action.loading}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setLoadingAC = () => ({type: SET_LOADING, loading:false})\r\n\r\nexport default loadingReducer;","/////////////\r\nimport style1 from '../Wednesday/Wednesday.module.css'\r\n\r\n\r\nexport const SET_STYLE_THEME = 'Task_Ignat/SettingsReducer/SET_STYLE';\r\n\r\nlet initialState = {\r\n    theme_style: {\r\n        themes: [\r\n            {id: 0, title: \"DARK\", color: \"brown\"},\r\n            {id: 1, title: \"GREEN\", color: \"green\"},\r\n            {id: 2, title: \"LIGHT\", color: \"yellow\"}\r\n        ],\r\n        choisedTheme: \"green\",\r\n        ///////////\r\n        selectedStyle: style1\r\n        ///////////\r\n    }\r\n}\r\n\r\nlet SettingsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_STYLE_THEME:\r\n            ///добавить еще один кейс , который в завис-ти от action.title будет мешать Selected style\r\n\r\n            return {...state, theme_style: {...state.theme_style, choisedTheme: action.color}}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n/////Actions CREATORS\r\nexport const setStyleTheme = (color) => ({type: SET_STYLE_THEME, color: color})\r\n\r\nexport default SettingsReducer;","import * as axios from \"axios\";\r\n///У слова async, которое ставится перед ф-ей один простой смысл: эта функция всегда возвращает промис\r\nexport  const tryCatch = async (f) => {\r\n\r\n    try {\r\n\r\n        //Ключевое слово await заставит интерпретатор JavaScript ждать до тех пор, пока промис справа от await не выполнится\r\n        const response = await f();\r\n        console.log('answer: ', response.data.yourBody.success);\r\n        debugger\r\n        return response.data.yourBody;\r\n        // return response.data.yourBody.success;\r\n    } catch (e) {\r\n        console.log('error: ', {...e});\r\n        console.log('error: ', {...e.response.data.yourBody});\r\n\r\n        return {success: false};\r\n    }\r\n}\r\n\r\nconst instance=axios.create({baseURL: 'https://neko-cafe-back.herokuapp.com/auth/test'})\r\n\r\nexport const API={\r\n    getSuccess(success){\r\n        return instance.post('',\r\n            {success: success}\r\n        )\r\n    }\r\n}","import {API, tryCatch} from \"../dal/api\";\r\nimport store from \"./reduxStore\";\r\n\r\nexport const CHANGE_SUCCESS = \"task_ignat_git/wendesdayReducer/CHANGE_SUCCESS\"\r\nexport const IN_PROGRESS = \"task_ignat_git/wendesdayReducer/IN_PROGRESS\"\r\nexport const CHANGE_NOTIFICATION = \"task_ignat_git/wendesdayReducer/CHANGE_NOTIFICATION\"\r\n\r\n\r\nlet initialState = {\r\n    success: true,\r\n    inProgress: false,\r\n    notification: \"\"\r\n}\r\n\r\nlet wednesdayReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_SUCCESS:\r\n            return {...state, success: action.success}\r\n\r\n        case IN_PROGRESS:\r\n            return {...state, inProgress: action.inProgress}\r\n\r\n        case CHANGE_NOTIFICATION:\r\n            return {...state, notification: action.newText}\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default wednesdayReducer;\r\n\r\nexport const changeSuccess = (success) => {\r\n    return (\r\n        {type: CHANGE_SUCCESS, success}\r\n    )\r\n}\r\n\r\nexport const changeNotification = (newText) => {\r\n    return (\r\n        {type: CHANGE_NOTIFICATION, newText}\r\n    )\r\n}\r\n\r\nexport const changeInProgress = (inProgress) => {\r\n    return (\r\n        {type: IN_PROGRESS, inProgress}\r\n    )\r\n}\r\n\r\nexport const queryFrom11LessTC=()=>{\r\n    return (dispatch, getState)=>{\r\n        dispatch(changeInProgress(true))\r\n\r\n        const success = getState().wednesdayPage.success\r\n        debugger\r\n\r\n\r\n///взять стейт из 10й строки\r\n        tryCatch(() =>API.getSuccess(success)).then((result) => {\r\n            // debugger\r\n            dispatch(changeInProgress(false))\r\n            if (result.success) {\r\n                dispatch(changeNotification('Запрос прошел успешно'))\r\n\r\n            } else {\r\n               dispatch(changeNotification('Запрос прошел неуспешно'))\r\n\r\n            }\r\n\r\n            setTimeout(() => {\r\n                dispatch(changeNotification(''))\r\n            }, 4000)\r\n        })\r\n    }\r\n}\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\n// import mondayReducer from \"./mondayReducer\";\r\n// import tuesdayReducer from \"./tuesdayReducer\";\r\nimport loadingReducer from \"./loadingReducer\";\r\nimport SettingsReducer from \"./SettingsReducer\";\r\nimport wednesdayReducer from \"./wednesdayReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\n\r\n\r\n// let initialState = {\r\n//     mondayPage: {\r\n//         arraySkills:\r\n//             [\r\n//                 {skill: \"рационалист\"},\r\n//                 {skill: \"комуннист\"},\r\n//                 {skill: \"анимешник\"}\r\n//             ],\r\n//         listOfNames: [\r\n//             // {name: \"Alla\"},\r\n//             // {name: \"Sasha\"}\r\n//         ]\r\n//     },\r\n//     loadingPage: {\r\n//         loading: true\r\n//     },\r\n//     tuesdayPage: {\r\n//         tasks: [\r\n//             // {id: 2, title: \"HTML\", isDone: true, priority: 'high', created: \"21.04.2020\", updated: \"21.04.2020\",finished: \"21.04.2020\",},\r\n//         ],\r\n//         filterValue: \"All\"\r\n//     }\r\n// }\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        loadingPage: loadingReducer,\r\n        settings: SettingsReducer,\r\n        // mondayPage: mondayReducer,\r\n        // tuesdayPage: tuesdayReducer\r\n        wednesdayPage: wednesdayReducer\r\n    }\r\n)\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store;\r\n","import React from 'react';\nimport style from './NavBar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nclass NavBar extends React.Component {\n\n    state = {\n        isHiddenPanel: true\n    }\n\n    ShowHidePanel = () => {\n        if (this.state.isHiddenPanel) {\n            this.setState({isHiddenPanel: false})\n        }\n        if (!this.state.isHiddenPanel) {\n            this.setState({isHiddenPanel: true})\n        }\n    }\n\n\n    render = () => {\n        let classForHidePanel = this.state.isHiddenPanel ? `${style.barPanel} ${style.hide}` : `${style.barPanel}`;\n        let classForButton = this.state.isHiddenPanel ? `${style.barButton} ${style.barButtonShow}` : `${style.barButton} ${style.barButtonHide}`;\n\n        return (\n\n\n            <div className={style.bar}>\n                <div className={classForButton} onClick={this.ShowHidePanel}>\n                </div>\n                <div className={classForHidePanel}>\n                    <div className={style.barItem}>\n                        <NavLink activeClassName={style.activeLink} to=\"/monday\">Monday</NavLink>\n                    </div>\n\n                    <div className={style.barItem}>\n                        <NavLink activeClassName={style.activeLink} to=\"/tuesday\">Tuesday</NavLink>\n                    </div>\n                    <div className={style.barItem}>\n                        <NavLink activeClassName={style.activeLink} to=\"/wednesday\">Wednesday</NavLink>\n                    </div>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default NavBar;\n","import React from 'react';\nimport my from './MyComponent.module.css'\n\nclass MyComponent extends React.Component {\n\n    render = () => {\n        return (\n            <div className={my.block}>\n                <div className={my.lastName}>Tuz Dmitry</div>\n                <div>домашка от меня №1: создать проект и выложить на github:\n                    - создать компоненту, которая красиво будет выводить ваше ФИО\n                    - *** создать компоненту, которая будет выводить текст, стилизованно как в телеграмме (имя, текст,\n                    время, уголок)\n                </div>\n                <input className={my.time} type=\"time\" value=\"12:15\" readOnly/>\n            </div>\n        );\n    }\n}\n\nexport default MyComponent;\n","import React from 'react';\n// import qua from './Quality.module.css'\n\n\nclass Quality extends React.Component {\n\n    render = () => {\n\n\n        return (\n            <div className={this.props.activeSkill}>\n                <div>{this.props.skill}</div>\n                <div>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</div>\n            </div>\n        );\n    }\n}\n\nexport default Quality;\n","import React from 'react';\nimport quaS from './Qualities.module.css'\nimport Quality from \"./Quality/Quality\";\nimport qua from \"./Quality/Quality.module.css\";\n\nclass Qualities extends React.Component {\n    render = () => {\n\n        // let arraySkills=[{skill:\"рационалист\"},{skill:\"комуннист\"},{skill:\"анимешник\"}];\n        let builder = this.props.arraySkills.map((el, i) => {\n                if (i === this.props.numberSkill) {\n                    return (\n                        <Quality key={i} skill={el.skill} activeSkill={`${qua.block} ${qua.active_block}`}/>\n                    )\n                } else {\n                    return (\n                        <Quality skill={el.skill} activeSkill={qua.block}/>\n                    )\n                }\n            }\n        );\n\n\n        return (\n            <div className={quaS.block}>\n                {builder}\n                {/*<Quality skill={this.props.arraySkills[0].skill}/>*/}\n                {/*<Quality skill={this.props.arraySkills[1].skill}/>*/}\n                {/*<Quality skill={this.props.arraySkills[2].skill}/>*/}\n            </div>\n        );\n    }\n}\n\nexport default Qualities;\n","import React from 'react';\n\nimport style from '../Component3.module.css'\n\nclass InnerSpan extends React.Component {\n\n\n\n    render = () => {\n        return (\n            <div className=\"\">\n                <span className={style.sp}>{this.props.nameCounter}</span>\n            </div>\n        );\n    }\n}\n\nexport default InnerSpan;\n","import React from 'react';\n\nimport style from '../Component3.module.css'\n\nclass InnerButton extends React.Component {\n\n\n    render = () => {\n        return (\n            <div className=\"\">\n                <button className={style.but}\n                        onClick={this.props.getName}>Push me</button>\n            </div>\n        );\n    }\n}\n\nexport default InnerButton;\n","import React from 'react';\n\nimport style from '../Component3.module.css'\n\nclass InnerInput extends React.Component {\n    onEnterPress=(e)=>{\n        if(e.key === \"Enter\"){this.props.getName()}\n    }\n\n\n    render = () => {\n        let classNameInput = !this.props.state.error ? `${style.error} ${style.inp}` : `${style.inp}`;\n        // let classNameInput = !this.props.state.title ? `${style.error} ${style.inp}` : `${style.inp}`;\n\n        return (\n            <div className=\"\">\n                <input className={classNameInput}\n                       // ref={this.props.inputNameRef}\n                       onChange={this.props.onChangeInput}\n                       value={this.props.state.title}\n                       onKeyPress={this.onEnterPress}\n                       type=\"text\" />\n            </div>\n        );\n    }\n}\n\nexport default InnerInput;\n","import React from 'react';\n\nimport style from '../../Component3.module.css'\n\nclass NameItem extends React.Component {\n\n\n    render = () => {\n        return (\n            <div className={style.NameItem}>{this.props.name}</div>\n        );\n    }\n}\n\nexport default NameItem;\n","import React from 'react';\n\nimport style from '../Component3.module.css'\nimport NameItem from \"./NameItem/NameItem\";\n\nclass InnerListOfNames extends React.Component {\n\n    render = () => {\n\n        let nameElements = this.props.listOfNames.map(el => <NameItem name={el.name}/>)\n\n\n        return (\n            <div className={style.listNames}>\n                {nameElements}\n            </div>\n        );\n    }\n}\n\nexport default InnerListOfNames;\n","import React from 'react';\n\nimport style from './Component3.module.css'\nimport InnerSpan from \"./Components3Parts/InnerSpan\";\nimport InnerButton from \"./Components3Parts/InnerButton\";\nimport InnerInput from \"./Components3Parts/InnerInput\";\nimport InnerListOfNames from \"./Components3Parts/InnerListOfNames\";\n\nclass Component3 extends React.Component {\n\n    state = {\n        error: true,\n        title: \"\"\n    }\n\n    onChangeInput = (e) => {\n        let n = e.currentTarget.value;\n        this.setState({\n            title: n,\n            error: true\n        })\n        console.log(this.state)\n    }\n\n\n    getName = () => {\n        // let currentName = this.inputNameRef.current.value;\n        let currentName = this.state.title;\n        this.setState({title: ''})\n\n        if (!this.state.title) {\n            this.setState({error: false})\n        } else {\n            this.props.getNameForAlert(currentName)\n            this.setState({error: true})\n        }\n    }\n\n    // onPressEnter=()=>\n\n    render = () => {\n        return (\n            <div className={style.componet3}>\n                <div>\n                    <InnerSpan nameCounter={this.props.state.listOfNames.length}/>\n\n                    <InnerInput state={this.state}\n                                getName={this.getName}\n                                onChangeInput={this.onChangeInput}\n                        // inputNameRef={this.inputNameRef}\n                    />\n\n                    <InnerButton getName={this.getName}/>\n                </div>\n\n                <InnerListOfNames listOfNames={this.props.state.listOfNames}/>\n            </div>\n        );\n    }\n}\n\nexport default Component3;\n","import React from 'react';\nimport MyComponent from \"./MyComponent/MyComponent\";\nimport Qualities from \"./Qualities/Qualities\";\nimport Component3 from \"./ComponentSpINBut/Component3\";\n\n\nclass Monday extends React.Component {\n\n\n    render = () => {\n        return (\n            <div>\n                <MyComponent/>\n                <Qualities arraySkills={this.props.arraySkills} numberSkill={this.props.numberSkill}/>\n                <Component3 state={this.props.state}\n                            getNameForAlert={this.props.getNameForAlert}/>\n            </div>\n        );\n    }\n}\n\nexport default Monday;\n","export const saveState = (state) => {\r\n    localStorage.setItem(\"our-state\", JSON.stringify(state));\r\n}\r\n\r\n\r\nexport const restoreState = () => {\r\n    let state = {\r\n        tasks: [],\r\n        filterValue: \"All\"\r\n    }\r\n    let stateAsString = localStorage.getItem(\"our-state\")\r\n    if (stateAsString) {\r\n        state = JSON.parse(stateAsString);\r\n    }\r\n    return state\r\n\r\n}\r\n\r\nexport const getOurTime = () => {\r\n    const day = new Date().toDateString();\r\n    const timeOperation = new Date().toTimeString().replace(/ .*/, '');\r\n    return (day + \"  \" + timeOperation)\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {getOurTime} from \"../functions\";\r\n\r\nclass TodoListHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.newTaskTitleRef = React.createRef(); //////////уже нам не нужен\r\n        /////создали ссылку на элемент <input ref={this.newTaskTitleRef}>//\r\n    }\r\n\r\n    state = {\r\n        error: true,\r\n        title: \"\"\r\n    }\r\n    onAddTaskClick = () => {\r\n        let newText = this.state.title;\r\n        this.setState({title: \"\"})\r\n\r\n        if (newText === \"\") {\r\n            this.setState({error: true})\r\n        } else {\r\n            this.setState({error: false})\r\n            this.props.addTask(newText); //вызвали ту ф-ю в родит. компоненте и подали в нее записаное в переменную newText значение инпута!\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onTitleChanged = (e) => {\r\n        debugger\r\n        this.setState({\r\n            error: false,\r\n            title: e.currentTarget.value\r\n        })\r\n    };\r\n\r\n    onKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            this.onAddTaskClick()\r\n        }\r\n    };\r\n\r\n\r\n    render = () => {\r\n        let classNameInput = this.state.error ? \"error\" : \"\";\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"todoList-header\">\r\n                    <h3 className=\"todoList-header__title\">What to Learn</h3>\r\n                    <div className=\"todoList-newTaskForm\">\r\n                        {/* input!! мы привязываем эту ссылку ref={this.newTaskTitleRef} на тебя!!!*/}\r\n                        <input\r\n                            // ref={this.newTaskTitleRef}     ///уже нам не нужна\r\n                            type=\"text\"\r\n                            className={classNameInput}\r\n                            onChange={this.onTitleChanged}\r\n                            value={this.state.title}\r\n                            onKeyPress={this.onKeyPress}\r\n                            placeholder=\"New task name\"/>\r\n\r\n                        {/*по клику на кнопку произойдет вызов ф-ии onAddTaskClick*/}\r\n                        <button onClick={this.onAddTaskClick}>Add</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListHeader;\r\n\r\nTodoListHeader.propTypes = {\r\n    // ________: PropTypes.____\r\n};","import React from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport {changeStatusIsDoneActionCreator, upDatePriorityActionCreator, upDateTitleActionCreator} from \"../TodoList\";\r\nimport style from \"./TodoListTask.module.css\"\r\n\r\nclass TodoListTask extends React.Component {\r\n\r\n    onIsDoneChanged = (e) => {\r\n        let currIsDone = e.currentTarget.checked;\r\n        let id = this.props.task.id;\r\n        let action;\r\n        if (currIsDone) {\r\n            action = changeStatusIsDoneActionCreator(id, currIsDone)\r\n            this.props.pseudoDispatch(action)\r\n        } else {\r\n            action = changeStatusIsDoneActionCreator(id, currIsDone)\r\n            this.props.pseudoDispatch(action)\r\n        }\r\n    }\r\n\r\n    onTitleChanged = (e) => {\r\n        let text = e.currentTarget.value;\r\n        let id = this.props.task.id;\r\n        let action = upDateTitleActionCreator(id, text);\r\n        this.props.pseudoDispatch(action)\r\n    }\r\n    onPriorityChanged = (e) => {\r\n        let value = e.currentTarget.value;\r\n        let id = this.props.task.id;\r\n        let action = upDatePriorityActionCreator(id, value)\r\n        this.props.pseudoDispatch(action)\r\n    }\r\n\r\n    onCloseClick = () => {\r\n        this.props.deleteTask(this.props.task.id)\r\n    }\r\n\r\n    state = {\r\n        editContentMode: false,\r\n        editPriorityMode: false,\r\n        displayCloudInfo: false\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editContentMode: true\r\n        })\r\n    }\r\n    deActivateEditMode = () => {\r\n        this.setState({\r\n            editContentMode: false\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        let classForIsDone = this.props.task.isDone ? `${style.done}` : `${style.todoListTask}`;\r\n        let classForCloud = this.state.displayCloudInfo ? `${style.showCloudInfo}` : `${style.hide}`;\r\n        return (\r\n            <div className='taskContainer'>\r\n                <div className={classForIsDone}\r\n                     onMouseOut={() => this.setState({displayCloudInfo: false})}\r\n                     onMouseOver={() => this.setState({displayCloudInfo: true})}\r\n                >\r\n\r\n                    <div className={classForCloud}>\r\n                        <div><b>created:</b> {this.props.task.created}</div>\r\n                        <div><b>updated:</b> {this.props.task.updated}</div>\r\n                        <div><b>finished:</b> {this.props.task.finished}</div>\r\n                    </div>\r\n                    <input type=\"checkbox\" onChange={this.onIsDoneChanged} checked={this.props.task.isDone}/>\r\n\r\n                    <span>{this.props.task.id}</span>\r\n                    {\r\n                        this.state.editContentMode\r\n                            ? <input onBlur={this.deActivateEditMode}\r\n                                     onChange={this.onTitleChanged}\r\n                                     value={this.props.task.title}\r\n                                     autoFocus={true}/>\r\n                            : <span onClick={this.activateEditMode}>-{this.props.task.title},</span>\r\n                    }\r\n\r\n                    <span>priority:\r\n                        {\r\n                            this.state.editPriorityMode\r\n                                ? <select size=\"1\"\r\n                                          onBlur={() => this.setState({editPriorityMode: false})}\r\n                                          onChange={this.onPriorityChanged}>\r\n                                    <option>low</option>\r\n                                    <option>medium</option>\r\n                                    <option>hight</option>\r\n                                </select>\r\n\r\n                                : <span onClick={() => this.setState({editPriorityMode: true})}>\r\n                                {this.props.task.priority}\r\n                            </span>\r\n                        }\r\n                    </span>\r\n\r\n                </div>\r\n                <button onClick={this.onCloseClick}>x</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTask;\r\n\r\nTodoListTask.propTypes = {\r\n    isDone: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    priority: PropTypes.string\r\n};","import React from \"react\";\r\nimport TodoListTask from \"./TodoListTask\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nclass TodoListTasks extends React.Component {\r\n\r\n    render = () => {\r\n\r\n        let taskElements = this.props.tasks.map(task => {\r\n            return <TodoListTask\r\n                pseudoDispatch={this.props.pseudoDispatch}\r\n                deleteTask={this.props.deleteTask}\r\n                task={task}/>\r\n        })\r\n        return (\r\n            <div className=\"todoList-tasks\">\r\n                {taskElements}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTasks;\r\n\r\nTodoListTasks.propTypes = {\r\n    tasks: PropTypes.array.isRequired\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass TodoListFooter extends React.Component {\r\n    state={\r\n        isHidden: false\r\n    }\r\n\r\n    onAllFilterClick = () => {this.props.changeFilter(\"All\")}\r\n    onCompletedFilterClick = () => {this.props.changeFilter(\"Completed\")}\r\n    onActiveFilterClick = () => {this.props.changeFilter(\"Active\")}\r\n    onShowFiltersClick = () => {this.setState({isHidden: false})}\r\n    onHideFiltersClick = () => {this.setState({isHidden: true})}\r\n\r\n    render = () => {\r\n\r\n        let classForAll = this.props.filterValue === \"All\" ? \"filter-active\" : \"\";\r\n        let classForCompleted = this.props.filterValue === \"Completed\" ? \"filter-active\" : \"\";\r\n        let classForActive = this.props.filterValue === \"Active\" ? \"filter-active\" : \"\";\r\n\r\n        return (\r\n            <div className=\"\">\r\n                <div className=\"todoList-footer\">\r\n                    {!this.state.isHidden && <div className=\"btnHideShow\" onClick={this.onHideFiltersClick}>hide</div>}\r\n                    {this.state.isHidden && <div className=\"btnHideShow\" onClick={this.onShowFiltersClick}>show</div>}\r\n                    {!this.state.isHidden && <div>\r\n                        <button onClick={this.onAllFilterClick} className={classForAll}>All</button>\r\n                        <button onClick={this.onCompletedFilterClick} className={classForCompleted}>Completed</button>\r\n                        <button onClick={this.onActiveFilterClick} className={classForActive}>Active</button>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListFooter;\r\n\r\nTodoListFooter.propTypes = {\r\n    filterValue: PropTypes.string\r\n};","import React from 'react';\r\nimport './TodoList.css';\r\nimport TodoListHeader from \"./todoComponents/TodoListHeader\";\r\nimport TodoListTasks from \"./todoComponents/TodoListTasks\";\r\nimport TodoListFooter from \"./todoComponents/TodoListFooter\";\r\nimport {saveState, restoreState, getOurTime} from \"./functions\";\r\n\r\n// import PropTypes from \"prop-types\";\r\nconst UPADATE_PRIORITY_VALUE = 'UPADATE_PRIORITY_VALUE';\r\nconst UPADATE_TITLE_TEXT = 'UPADATE_TITLE_TEXT';\r\nconst CHANGE_STATUS_IS_DONE = 'CHANGE_STATUS_IS_DONE';\r\n\r\n\r\nclass TodoList extends React.Component {\r\n    nextTaskId = 0;\r\n\r\n    componentDidMount() {\r\n        let x = restoreState()\r\n        this.setState(x, () => {\r\n            // debugger;\r\n            this.nextTaskId = this.state.tasks.length\r\n            //////---------------------либо же\r\n            // this.state.tasks.forEach(task => {\r\n            //             if (task.id >= this.nextTaskId) {\r\n            //                 this.nextTaskId = task.id + 1\r\n            //             }\r\n            //         })\r\n            /////-----------------------------\r\n        })\r\n\r\n\r\n    }\r\n\r\n    state = {\r\n        tasks: [\r\n            // {id: 1, title: \"JS\", isDone: true, priority: 'low'},\r\n            // {id: 2, title: \"HTML\", isDone: true, priority: 'high', created: \"21.04.2020\", updated: \"21.04.2020\",finished: \"21.04.2020\",},\r\n        ], filterValue: \"All\"\r\n    }\r\n\r\n    addTask = (newText) => {\r\n        let newTask = {\r\n            id: this.nextTaskId, title: newText, isDone: false, priority: 'low',\r\n            created: getOurTime(), updated: \"none\", finished: \"none\"\r\n        };\r\n\r\n        this.nextTaskId++;\r\n        let newTasks = [...this.state.tasks, newTask] ///...this.state.tasks-- раскукоживаем старый массив\r\n        this.setState({tasks: newTasks}, () => saveState(this.state)) ///setState- метод реагирующий на изменение св-ва state\r\n    }\r\n    deleteTask = (taskId) => {\r\n        ///скопировали массив тасок в новую переменную\r\n        let newTasks = [...this.state.tasks]\r\n        ///убираем таску которую хотим удалить\r\n        newTasks = newTasks.filter((t) => t.id !== taskId)\r\n        ////переписали массив тасок с актуальными id\r\n        newTasks = newTasks.map((t, index) => {\r\n            return {...t, id: index}\r\n        })\r\n\r\n        ///----------------------------------------------------/код -равнозначный  строкам 78-82\r\n        // newTasks.splice(taskId, 1)\r\n        // newTasks =newTasks.map((t, index)=>{\r\n        //\r\n        //     return {...t, id:index}\r\n        // })\r\n        ///----------------------------------------------------\r\n        ///уменьшили переменную для следующего id\r\n        --this.nextTaskId;\r\n        // debugger;\r\n        this.setState({tasks: newTasks}, () => saveState(this.state)) ///setState- метод реагирующий на изменение св-ва state\r\n    }\r\n\r\n    changeFilter = (newfilterValue) => {\r\n        this.setState({filterValue: newfilterValue}, () => saveState(this.state));\r\n    }\r\n\r\n    changeTask = (taskId, newPropsObj) => {\r\n        let newTasks = this.state.tasks.map(t => {\r\n            if (t.id !== taskId) {\r\n                return t\r\n            } else {\r\n                return {...t, ...newPropsObj}\r\n            }\r\n        });\r\n\r\n        this.setState({tasks: newTasks}, () => {\r\n            saveState(this.state)\r\n        });\r\n    }\r\n\r\n    pseudoDispatch = (action) => {\r\n        switch (action.type) {\r\n            case UPADATE_TITLE_TEXT:\r\n                this.changeTask(action.id, {title: action.newText, updated: getOurTime()})\r\n                break;\r\n\r\n            case UPADATE_PRIORITY_VALUE: {\r\n                this.changeTask(action.id, {priority: action.newValue, updated: getOurTime()})\r\n            }\r\n                break;\r\n\r\n            case CHANGE_STATUS_IS_DONE:\r\n                if (action.isDone) {\r\n                    this.changeTask(action.id, {\r\n                        isDone: action.isDone,\r\n                        finished: getOurTime()\r\n                    })\r\n                } else {\r\n                    this.changeTask(action.id, {\r\n                        isDone: action.isDone,\r\n                        updated: getOurTime(),\r\n                        finished: 'none'\r\n                    })\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    render = () => {\r\n\r\n        return (\r\n            <div className=\"Todo\">\r\n                <div className=\"todoList\">\r\n                    <TodoListHeader addTask={this.addTask}/>\r\n                    <TodoListTasks\r\n                        pseudoDispatch={this.pseudoDispatch}\r\n                        deleteTask={this.deleteTask}\r\n                        tasks={this.state.tasks.filter(t => {\r\n                                switch (this.state.filterValue) {\r\n                                    case \"All\":\r\n                                        return true;\r\n                                    case \"Completed\":\r\n                                        return t.isDone;\r\n                                    case \"Active\":\r\n                                        return (!t.isDone);\r\n                                    default:\r\n                                        return true;\r\n                                }\r\n                            }\r\n                        )}/>\r\n                    <TodoListFooter changeFilter={this.changeFilter} filterValue={this.state.filterValue}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n\r\n\r\nexport const upDateTitleActionCreator = (id, text) => ({\r\n    type: UPADATE_TITLE_TEXT,\r\n    newText: text,\r\n    id: id\r\n})\r\nexport const upDatePriorityActionCreator = (id, value) => ({\r\n    type: UPADATE_PRIORITY_VALUE,\r\n    newValue: value,\r\n    id: id\r\n})\r\nexport const changeStatusIsDoneActionCreator = (id, currIsDone) => ({\r\n    type: CHANGE_STATUS_IS_DONE,\r\n    id: id,\r\n    isDone: currIsDone\r\n})\r\n\r\n// App.propTypes = {\r\n//     // _________: PropTypes.string\r\n// };\r\n","import React from 'react';\nimport TodoList from \"./TodoList/TodoList\";\n// import style from '../Component3.module.css'\n\nclass Tuesday extends React.Component {\n    render = () => {\n        return (\n            <div >\n                <TodoList />\n            </div>\n        );\n    }\n}\nexport default Tuesday;\n","import React from 'react';\nimport style from './Loading.module.css';\n\n\nclass Loading extends React.Component {\n\n    render = () => {\n        return (\n            <div className={style.loadingContainer}>\n                <div className={style.loadingBlock}>loading</div>\n            </div>\n        );\n    }\n}\n\nexport default Loading;\n","import React from 'react';\r\nimport style from './InputRadio.module.css'\r\n\r\nconst InputRadio = (props) => {\r\n    let onPress = (color) => {\r\n        // let a = e.currentTarget.value\r\n        props.setTheme(color)\r\n    }\r\n\r\n    let divsStyle = {\r\n        color:props.color\r\n    };\r\n    return (\r\n        <label className={style.textLabel} style={divsStyle}>\r\n            <input name='theme' type=\"radio\" id={props.id} onClick={()=>onPress(props.color)}/>\r\n            {props.title}\r\n        </label>\r\n    )\r\n}\r\nexport default InputRadio","import React from \"react\";\r\nimport InputRadio from \"./InputRadio/InputRadio\";\r\nimport style from \"./ThemeSelector.module.css\"\r\n\r\nlet ThemeSelector = (props) => {\r\n\r\n    let ourThemes = props.state.themes.map(theme => <InputRadio key={theme.id}\r\n                                                                title={theme.title}\r\n                                                                id={theme.id}\r\n                                                                color={theme.color}\r\n                                                                setTheme={props.setTheme}/>)\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div>Choose next theme:</div>\r\n            {ourThemes}\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ThemeSelector;","import React from \"react\";\r\nimport preloader from '../assets/images/preloader.gif'\r\n\r\nconst Progress = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Progress;","import React from \"react\";\r\n\r\nimport Progress from \"../../Progress/Progress\";\r\n\r\nconst QuerySender = (props) => {\r\n\r\n    const onCheckBoxClick = (e) => {\r\n        props.changeSuccess(e.currentTarget.checked)\r\n\r\n    }\r\n\r\n    // const f = () => {\r\n    //     return API.getSuccess(props.success)\r\n    // }\r\n    // const onSendButtonClick = () => {\r\n    //     props.changeInProgress(true)\r\n    //\r\n    //     tryCatch(f).then((result) => {\r\n    //         props.changeInProgress(false)\r\n    //         if (result.success) {\r\n    //             props.changeNotification('Запрос прошел успешно')\r\n    //         } else {\r\n    //             props.changeNotification('Запрос прошел неуспешно')\r\n    //\r\n    //         }\r\n    //\r\n    //         setTimeout(() => {\r\n    //             props.changeNotification('')\r\n    //         }, 4000)\r\n    //     })\r\n    // }\r\n\r\n    const onSendButtonClick = () => {props.queryFrom11Less()}\r\n\r\n\r\n    const divstyle = {\r\n        backgroundColor: 'orange',\r\n        borderRadius: 20,\r\n        border: 2,\r\n        height: 100\r\n    }\r\n\r\n    return (\r\n        <div style={divstyle}>\r\n            <input type=\"checkbox\" onChange={onCheckBoxClick} checked={props.success}/>\r\n            <button disabled={props.inProgress} onClick={onSendButtonClick}>SEND</button>\r\n            <div style={{color: 'green', fontWeight: 'bold'}}>\r\n                {props.notification}\r\n            </div>\r\n            {props.inProgress ? <Progress/> : null}\r\n        </div>\r\n    )\r\n}\r\nexport default QuerySender","import React from \"react\";\r\nimport QuerySender from \"./QuerySender\";\r\nimport {connect} from \"react-redux\";\r\nimport * as axios from \"axios\";\r\nimport {\r\n    changeInProgress,\r\n    changeNotification,\r\n    changeSuccess,\r\n    queryFrom11LessTC,\r\n} from \"../../redux/wednesdayReducer\";\r\n\r\nclass QuerySenderAPI extends React.Component {\r\n    componentDidMount() {\r\n        ///делать запрос\r\n    }\r\n\r\n    // getQuery() {\r\n    //     debugger\r\n    //     axios.post('https://neko-cafe-back.herokuapp.com/auth/test',\r\n    //         {success: this.success}\r\n    //     ).then(response => {\r\n    //         debugger\r\n    //         console.log(response.data.yourBody)\r\n    //         alert(response.data.yourBody.success)\r\n    //     })\r\n    //         .catch(err => alert(err));\r\n    // }\r\n\r\n    // tryCatch = async (f) => {\r\n    //\r\n    //     try {\r\n    //         const response = await f();\r\n    //         console.log('answer: ', response.data.yourBody.success);\r\n    //         return response.data.yourBody;\r\n    //     } catch (e) {\r\n    //         console.log('error: ', {...e});\r\n    //         console.log('error: ', {...e.response.data.yourBody});\r\n    //\r\n    //         return {success: false};\r\n    //     }\r\n    // }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <QuerySender success={this.props.success}\r\n                         changeSuccess={this.props.changeSuccess}\r\n\r\n                         inProgress={this.props.inProgress}\r\n                         changeInProgress={this.props.changeInProgress}\r\n\r\n                         notification={this.props.notification}\r\n                         changeNotification={this.props.changeNotification}\r\n\r\n                         queryFrom11Less={this.props.queryFrom11Less}\r\n                         />\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        success: state.wednesdayPage.success,\r\n        inProgress: state.wednesdayPage.inProgress,\r\n        notification: state.wednesdayPage.notification\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeSuccess: (isSuccess) => {\r\n            dispatch(changeSuccess(isSuccess))\r\n        },\r\n        // changeInProgress: (inProgress)=>{\r\n        //     dispatch(changeInProgress(inProgress))\r\n        // },\r\n        // changeNotification:(newText)=>{\r\n        //     dispatch(changeNotification(newText))\r\n        // }\r\n        queryFrom11Less:()=>{\r\n            let thunk=queryFrom11LessTC()\r\n            dispatch(thunk)\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuerySenderAPI)\r\n\r\n","import React from 'react';\nimport ThemeSelector from \"./ThemeSelector/ThemeSelector\";\n// import style from './Wednesday.module.css'\nimport {connect} from \"react-redux\";\nimport {setStyleTheme} from \"../redux/SettingsReducer\";\nimport QuerySenderContainer from \"./QuerySendComponent/QuerySenderContainer\";\n\n// import style from '../Component3.module.css'\n\nclass Wednesday extends React.Component {\n\n    render = () => {\n        let divStyle = {\n            backgroundColor: this.props.themeStyle.choisedTheme\n        };\n\n        return (\n            // <div className={`${style.backColor}`} style={divStyle}>\n            <div className={`${this.props.themeStyle.selectedStyle.backColor}`} style={divStyle}>\n              <ThemeSelector state={this.props.themeStyle} setTheme={this.props.setTheme}/>\n              <QuerySenderContainer />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return{\n        themeStyle:state.settings.theme_style\n    }\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        setTheme:(color)=>{\n            dispatch(setStyleTheme(color))\n        }\n\n    }\n}\n\nlet WednesdayContainer=connect(mapStateToProps,mapDispatchToProps)(Wednesday)\nexport default WednesdayContainer;\n","import React from 'react';\nimport './App.css';\n\nimport NavBar from \"./NavBar/NavBar\";\nimport Monday from \"./Monday/Monday\";\nimport Tuesday from \"./Tuesday/Tuesday\";\nimport {Route} from \"react-router-dom\";\nimport Loading from \"./Loading/Loading\";\nimport {connect} from \"react-redux\";\nimport {setLoadingAC} from \"./redux/loadingReducer\";\nimport Wednesday from \"./Wednesday/Wednesday\";\n\n\nclass App extends React.Component {\n    //////было//////////\n    // componentDidMount() {\n    //     setTimeout(() => {\n    //         this.setState({loading: false})\n    //     }, 3000)\n    // }\n    /////стало//////////\n    componentDidMount() {\n        setTimeout(() => {\n            this.props.setLoadingFalse()\n        }, 3000)\n    }\n\n    arraySkills =\n        [\n            {skill: \"рационалист\"},\n            {skill: \"комуннист\"},\n            {skill: \"анимешник\"}\n        ];\n\n    ChooseActiveSkill = 0;\n\n    state = {\n        // loading: true,\n        listOfNames: [\n            // {name: \"Alla\"},\n            // {name: \"Sasha\"}\n        ]\n    };\n\n\n    getNameForAlert = (currentName) => {\n        if (currentName) {\n\n            let newName = {name: currentName}\n            let newNames = [...this.state.listOfNames, newName];\n\n            this.setState({listOfNames: newNames});\n            // alert(currentName);\n        }\n    }\n\n\n    render = () => {\n        return (\n            <div className=\"App\">\n                {/*{this.state.loading &&*/}\n                {this.props.loading &&\n                <>\n                    <div></div>\n                    <Loading/>\n                </>}\n                {/*{!this.state.loading &&*/}\n                {!this.props.loading &&\n                <>\n                    <div>\n                        <NavBar/>\n                    </div>\n                    <div className=\"app-wrapper\">\n                        <Route path='/monday' render={() => <Monday arraySkills={this.arraySkills}\n                                                                    numberSkill={this.ChooseActiveSkill}\n                                                                    state={this.state}\n                                                                    getNameForAlert={this.getNameForAlert}/>}/>\n                        <Route path='/tuesday' render={() => <Tuesday/>}/>\n                        <Route path='/wednesday' render={() => <Wednesday/>}/>\n\n\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\n////////////////////////////////////////////////////////////////\nlet mapStateToProps = (state) => {\n    return {\n        loading: state.loadingPage.loading\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        setLoadingFalse: () => {\n            let action = setLoadingAC()\n            dispatch(action)\n        }\n\n    }\n}\n\n\nlet AppContainer = connect(mapStateToProps, mapDispatchToProps)(App)\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/reduxStore\";\nimport AppContainer from \"./App\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            {/*<App/>*/}\n            <AppContainer/>\n        </HashRouter>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}