{"version":3,"sources":["MyComponent/MyComponent.module.css","Qualities/Quality/Quality.module.css","Qualities/Qualities.module.css","NavBar/NavBar.jsx","MyComponent/MyComponent.jsx","Qualities/Quality/Quality.jsx","Qualities/Qualities.jsx","ComponentSpINBut/Components3Parts/InnerSpan.jsx","ComponentSpINBut/Components3Parts/InnerButton.jsx","ComponentSpINBut/Components3Parts/InnerInput.jsx","ComponentSpINBut/Components3Parts/NameItem/NameItem.jsx","ComponentSpINBut/Components3Parts/InnerListOfNames.jsx","ComponentSpINBut/Component3.jsx","Monday/Monday.jsx","Tuesday/Tuesday.jsx","App.jsx","serviceWorker.js","index.jsx","ComponentSpINBut/Component3.module.css","NavBar/NavBar.module.css"],"names":["module","exports","NavBar","state","isHiddenPanel","ShowHidePanel","setState","render","classForHidePanel","style","barPanel","hide","classForButton","barButton","barButtonShow","barButtonHide","className","bar","onClick","barItem","activeClassName","activeLink","to","React","Component","MyComponent","my","block","lastName","time","type","value","readOnly","Quality","props","activeSkill","skill","Qualities","builder","arraySkills","map","el","i","numberSkill","key","qua","active_block","quaS","InnerSpan","sp","nameCounter","InnerButton","but","getName","InnerInput","onEnterPress","e","classNameInput","error","inp","onChange","onChangeInput","title","onKeyPress","NameItem","name","InnerListOfNames","nameElements","listOfNames","listNames","Component3","n","currentTarget","console","log","currentName","getNameForAlert","componet3","length","Monday","Tuesday","App","ChooseActiveSkill","newName","newNames","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.da2accd7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"MyComponent_block__2tIsA\",\"time\":\"MyComponent_time__3FT1w\",\"lastName\":\"MyComponent_lastName__1TVBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Quality_block__2JeKV\",\"active_block\":\"Quality_active_block__PUzae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Qualities_block__79j_A\"};","import React from 'react';\nimport style from './NavBar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nclass NavBar extends React.Component {\n\n    state = {\n        isHiddenPanel: true\n    }\n\n    ShowHidePanel = () => {\n        if (this.state.isHiddenPanel) {\n            this.setState({isHiddenPanel: false})\n        }\n        if (!this.state.isHiddenPanel) {\n            this.setState({isHiddenPanel: true})\n        }\n    }\n\n\n    render = () => {\n        let classForHidePanel = this.state.isHiddenPanel ? `${style.barPanel} ${style.hide}` : `${style.barPanel}`;\n        let classForButton = this.state.isHiddenPanel ? `${style.barButton} ${style.barButtonShow}` : `${style.barButton} ${style.barButtonHide}`;\n\n        return (\n\n\n            <div className={style.bar}>\n                <div className={classForButton} onClick={this.ShowHidePanel}>\n                </div>\n                <div className={classForHidePanel}>\n                    <div className={style.barItem}>\n                        <NavLink activeClassName={style.activeLink} to=\"/monday\">Monday</NavLink>\n                    </div>\n\n                    <div className={style.barItem}>\n                        <NavLink activeClassName={style.activeLink} to=\"/tuesday\">Tuesday</NavLink>\n                    </div>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default NavBar;\n","import React from 'react';\nimport my from './MyComponent.module.css'\n\nclass MyComponent extends React.Component {\n\n    render = () => {\n        return (\n            <div className={my.block}>\n                <div className={my.lastName}>Tuz Dmitry</div>\n                <div>домашка от меня №1: создать проект и выложить на github:\n                    - создать компоненту, которая красиво будет выводить ваше ФИО\n                    - *** создать компоненту, которая будет выводить текст, стилизованно как в телеграмме (имя, текст,\n                    время, уголок)\n                </div>\n                <input className={my.time} type=\"time\" value=\"12:15\" readOnly/>\n            </div>\n        );\n    }\n}\n\nexport default MyComponent;\n","import React from 'react';\n// import qua from './Quality.module.css'\n\n\nclass Quality extends React.Component {\n\n    render = () => {\n\n\n        return (\n            <div className={this.props.activeSkill}>\n                <div>{this.props.skill}</div>\n                <div>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</div>\n            </div>\n        );\n    }\n}\n\nexport default Quality;\n","import React from 'react';\nimport quaS from './Qualities.module.css'\nimport Quality from \"./Quality/Quality\";\nimport qua from \"./Quality/Quality.module.css\";\n\nclass Qualities extends React.Component {\n    render = () => {\n\n        // let arraySkills=[{skill:\"рационалист\"},{skill:\"комуннист\"},{skill:\"анимешник\"}];\n        let builder = this.props.arraySkills.map((el, i) => {\n                if (i === this.props.numberSkill) {\n                    return (\n                        <Quality key={i} skill={el.skill} activeSkill={`${qua.block} ${qua.active_block}`}/>\n                    )\n                } else {\n                    return (\n                        <Quality skill={el.skill} activeSkill={qua.block}/>\n                    )\n                }\n            }\n        );\n\n\n        return (\n            <div className={quaS.block}>\n                {builder}\n                {/*<Quality skill={this.props.arraySkills[0].skill}/>*/}\n                {/*<Quality skill={this.props.arraySkills[1].skill}/>*/}\n                {/*<Quality skill={this.props.arraySkills[2].skill}/>*/}\n            </div>\n        );\n    }\n}\n\nexport default Qualities;\n","import React from 'react';\n\nimport style from '../Component3.module.css'\n\nclass InnerSpan extends React.Component {\n\n\n\n    render = () => {\n        return (\n            <div className=\"\">\n                <span className={style.sp}>{this.props.nameCounter}</span>\n            </div>\n        );\n    }\n}\n\nexport default InnerSpan;\n","import React from 'react';\n\nimport style from '../Component3.module.css'\n\nclass InnerButton extends React.Component {\n\n\n    render = () => {\n        return (\n            <div className=\"\">\n                <button className={style.but}\n                        onClick={this.props.getName}>Push me</button>\n            </div>\n        );\n    }\n}\n\nexport default InnerButton;\n","import React from 'react';\n\nimport style from '../Component3.module.css'\n\nclass InnerInput extends React.Component {\n    onEnterPress=(e)=>{\n        if(e.key === \"Enter\"){this.props.getName()}\n    }\n\n\n    render = () => {\n        let classNameInput = !this.props.state.error ? `${style.error} ${style.inp}` : `${style.inp}`;\n        // let classNameInput = !this.props.state.title ? `${style.error} ${style.inp}` : `${style.inp}`;\n\n        return (\n            <div className=\"\">\n                <input className={classNameInput}\n                       // ref={this.props.inputNameRef}\n                       onChange={this.props.onChangeInput}\n                       value={this.props.state.title}\n                       onKeyPress={this.onEnterPress}\n                       type=\"text\" />\n            </div>\n        );\n    }\n}\n\nexport default InnerInput;\n","import React from 'react';\n\nimport style from '../../Component3.module.css'\n\nclass NameItem extends React.Component {\n\n\n    render = () => {\n        return (\n            <div className={style.NameItem}>{this.props.name}</div>\n        );\n    }\n}\n\nexport default NameItem;\n","import React from 'react';\n\nimport style from '../Component3.module.css'\nimport NameItem from \"./NameItem/NameItem\";\n\nclass InnerListOfNames extends React.Component {\n\n    render = () => {\n\n        let nameElements = this.props.listOfNames.map(el => <NameItem name={el.name}/>)\n\n\n        return (\n            <div className={style.listNames}>\n                {nameElements}\n            </div>\n        );\n    }\n}\n\nexport default InnerListOfNames;\n","import React from 'react';\n\nimport style from './Component3.module.css'\nimport InnerSpan from \"./Components3Parts/InnerSpan\";\nimport InnerButton from \"./Components3Parts/InnerButton\";\nimport InnerInput from \"./Components3Parts/InnerInput\";\nimport InnerListOfNames from \"./Components3Parts/InnerListOfNames\";\n\nclass Component3 extends React.Component {\n    // inputNameRef = React.createRef();\n\n    state = {\n        error: true,\n        title: \"\"\n    }\n\n    onChangeInput = (e) => {\n        let n = e.currentTarget.value;\n        this.setState({\n            title: n,\n            error: true\n        })\n        console.log(this.state)\n    }\n\n\n    getName = () => {\n        // let currentName = this.inputNameRef.current.value;\n        let currentName = this.state.title;\n        this.setState({title: ''})\n\n        if (!this.state.title) {\n            this.setState({error: false})\n        } else {\n            this.props.getNameForAlert(currentName)\n            this.setState({error: true})\n        }\n    }\n\n    // onPressEnter=()=>\n\n    render = () => {\n        return (\n            <div className={style.componet3}>\n                <div>\n                    <InnerSpan nameCounter={this.props.state.listOfNames.length}/>\n\n                    <InnerInput state={this.state}\n                                getName={this.getName}\n                                onChangeInput={this.onChangeInput}\n                        // inputNameRef={this.inputNameRef}\n                    />\n\n                    <InnerButton getName={this.getName}/>\n                </div>\n\n                <InnerListOfNames listOfNames={this.props.state.listOfNames}/>\n            </div>\n        );\n    }\n}\n\nexport default Component3;\n","import React from 'react';\nimport MyComponent from \"../MyComponent/MyComponent\";\nimport Qualities from \"../Qualities/Qualities\";\nimport Component3 from \"../ComponentSpINBut/Component3\";\n\n\nclass Monday extends React.Component {\n\n\n    render = () => {\n        return (\n            <div>\n                <MyComponent/>\n                <Qualities arraySkills={this.props.arraySkills} numberSkill={this.props.numberSkill}/>\n                <Component3 state={this.props.state}\n                            getNameForAlert={this.props.getNameForAlert}/>\n            </div>\n        );\n    }\n}\n\nexport default Monday;\n","import React from 'react';\n\n// import style from '../Component3.module.css'\n\nclass Tuesday extends React.Component {\n\n\n    render = () => {\n        return (\n            <div >\n                это вторник\n            </div>\n        );\n    }\n}\n\nexport default Tuesday;\n","import React from 'react';\nimport './App.css';\n\nimport NavBar from \"./NavBar/NavBar\";\nimport Monday from \"./Monday/Monday\";\nimport Tuesday from \"./Tuesday/Tuesday\";\nimport {Route} from \"react-router-dom\";\n\n\nclass App extends React.Component {\n\n    arraySkills =\n        [\n            {skill: \"рационалист\"},\n            {skill: \"комуннист\"},\n            {skill: \"анимешник\"}\n        ];\n\n    ChooseActiveSkill = 0;\n\n    state = {\n        listOfNames: [\n            // {name: \"Alla\"},\n            // {name: \"Sasha\"}\n        ]\n    };\n\n\n    getNameForAlert = (currentName) => {\n        if (currentName) {\n\n            let newName = {name: currentName}\n            let newNames = [...this.state.listOfNames, newName];\n\n            this.setState({listOfNames: newNames});\n            // alert(currentName);\n        }\n    }\n\n\n    render = () => {\n        return (\n            <div className=\"App\">\n                <div>\n                    <NavBar/>\n                </div>\n                <div className=\"app-wrapper\">\n                    <Route path='/monday' render={() => <Monday arraySkills={this.arraySkills}\n                                                                numberSkill={this.ChooseActiveSkill}\n                                                                state={this.state}\n                                                                getNameForAlert={this.getNameForAlert}/>}/>\n                    <Route path='/tuesday' render={() => <Tuesday/>}/>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter>\n        <App/>\n    </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"componet3\":\"Component3_componet3__2Safo\",\"sp\":\"Component3_sp__29fvB\",\"inp\":\"Component3_inp__3RCIv\",\"but\":\"Component3_but__E3q32\",\"listNames\":\"Component3_listNames__20edd\",\"NameItem\":\"Component3_NameItem__2D2RK\",\"error\":\"Component3_error__XYk66\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"NavBar_bar__32D5t\",\"barButton\":\"NavBar_barButton__1Jo72\",\"barButtonShow\":\"NavBar_barButtonShow__3EjPc\",\"barButtonHide\":\"NavBar_barButtonHide__1vTwC\",\"barPanel\":\"NavBar_barPanel__2hS1A\",\"hide\":\"NavBar_hide__cqKio\",\"activeLink\":\"NavBar_activeLink__3W2Gv\",\"barItem\":\"NavBar_barItem__3DM-B\"};"],"sourceRoot":""}